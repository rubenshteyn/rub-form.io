// Проект создавался на Gulp и это файл со сборки

/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_functions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/functions.js */ \"./src/js/modules/functions.js\");\n\r\n_modules_functions_js__WEBPACK_IMPORTED_MODULE_0__.isWebp()\r\n\r\n// custom select\r\nvar navigationSelect = document.querySelector('.select-wrapper');\r\nvar navigationSelect2 = document.querySelector('.select-wrapper2');\r\nvar navigationSelect3 = document.querySelector('.select-wrapper3');\r\nvar navigationSelect4 = document.querySelector('.select-wrapper4');\r\n\r\nfunction initSelect(elem){\r\n  var selectHolder = elem.querySelector('.holder');\r\n  var selectOptions = elem.querySelectorAll('.dropdownOption li');\r\n  var dropHolder = elem.querySelector('.dropdown');\r\n  var selectedOption = selectOptions[0];\r\n\r\n  selectedOption.classList.add('current');\r\n\r\n  selectHolder.addEventListener('click', function () {\r\n    dropHolder.classList.toggle('active');\r\n   });\r\n\r\n  selectOptions.forEach(function(currentElement) {\r\n    currentElement.addEventListener('click', function(){\r\n      selectedOption.classList.remove('current');\r\n      selectedOption = currentElement;\r\n      currentElement.classList.add('current');\r\n      selectHolder.innerText = currentElement.textContent;\r\n      dropHolder.classList.toggle('active');\r\n    });\r\n  });\r\n};\r\n\r\ninitSelect(navigationSelect);\r\ninitSelect(navigationSelect2);\r\ninitSelect(navigationSelect3);\r\ninitSelect(navigationSelect4)\r\n\r\n\n\n//# sourceURL=webpack://test-burn/./src/js/app.js?");

/***/ }),

/***/ "./src/js/modules/functions.js":
/*!*************************************!*\
  !*** ./src/js/modules/functions.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isWebp\": () => (/* binding */ isWebp)\n/* harmony export */ });\n\r\nfunction isWebp() {\r\n    // проверка поддержки webp\r\n    function testWebp(callback) {\r\n        let webP = new Image();\r\n        webP.onload = webP.onerror = function () {\r\n            callback(webP.height == 2)\r\n        }\r\n        webP.src = \"data:image/webp/\"\r\n    }\r\n    // добавление класса _webp или _no-webp для html\r\n    testWebp(function (support) {\r\n        let className = support === true ? 'webp' : 'no-webp'\r\n        document.documentElement.classList.add(className)\r\n    })\r\n}\n\n//# sourceURL=webpack://test-burn/./src/js/modules/functions.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/app.js");
/******/ 	
/******/ })()
;